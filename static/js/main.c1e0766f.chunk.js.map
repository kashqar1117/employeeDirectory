{"version":3,"sources":["datatable/index.jsx","App.js","index.js"],"names":["Datatable","data","className","style","display","map","person","index","name","first","last","gender","email","App","useState","setData","query","setQuery","console","log","dataToDisplay","q","toLowerCase","filter","item","fName","lName","includes","useEffect","fetch","then","response","json","results","type","value","onChange","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAEe,SAASA,EAAT,GACd,IADkCC,EACnC,EADmCA,KAE/B,OACI,qBAAKC,UAAU,YAAYC,MAAO,CAACC,QAAQ,UAA3C,SAEQH,EAAKI,KAAI,SAACC,EAAQC,GACd,OAEI,8BACA,sBAAKL,UAAY,MAAjB,UACI,qBAAKA,UAAU,gBAAf,SACA,+BAAKI,EAAOE,KAAKC,MAAjB,IAAyBH,EAAOE,KAAKE,UAErC,qBAAKR,UAAU,cAAf,SACA,yCAAYI,EAAOK,YAGnB,qBAAKT,UAAU,gBAAf,SACA,wCAAWI,EAAOM,eAVZL,Q,MCmDnBM,MAxDd,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACPb,EADO,KACDc,EADC,OAEYD,mBAAS,IAFrB,mBAEPE,EAFO,KAEAC,EAFA,KAGdC,QAAQC,IAAIH,GAGZ,IAAII,EAAgBnB,EAEpB,GAAa,KAAVe,EAAa,CACd,IAAMK,EAAIL,EAAMM,cACfF,EAAgBnB,EAAKsB,QAAO,SAACC,GAC5B,IAAIC,EAAQD,EAAKhB,KAAKC,MAAMa,cACxBI,EAAQF,EAAKhB,KAAKE,KAAKY,cAC3B,SAAGG,EAAME,SAASN,KAAKK,EAAMC,SAASN,OAiB1C,OALAO,qBAAU,WACRC,MAAM,yCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIjB,EAAQiB,EAAKC,cAC3B,IAGA,gCAEE,mCACA,oBAAI/B,UAAU,YAAd,gCACA,oBAAIA,UAAU,YAAd,+BAIF,qBAAMA,UAAU,QAAhB,SACE,uBAAOgC,KAAK,OAAOC,MAAOnB,EAAOoB,SAAU,SAACC,GAAD,OAAMpB,EAASoB,EAAEC,OAAOH,YAKrE,8BACA,cAACnC,EAAD,CAAWC,KAAMmB,UC9CrBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c1e0766f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Datatable({data})\n{\n    return(\n        <div className=\"personDiv\" style={{display:'inline'}}>\n            {\n                data.map((person, index)=>{\n                    return(\n\n                        <div key={index}>\n                        <div className = \"row\">\n                            <div className=\"three columns\">\n                            <h3>{person.name.first} {person.name.last}</h3></div>\n\n                            <div className=\"six columns\">\n                            <p>gender: {person.gender}</p>\n                            </div>\n\n                            <div className=\"three columns\">\n                            <p>email: {person.email}</p>\n                            </div>\n                        </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n","import React , { useState, useEffect} from 'react'\n// import './App.css';\nimport Datatable from './datatable'\nimport './style.css'\n\n function App() {\n  const [data, setData] = useState([])\n  const [query, setQuery] = useState('')\n  console.log(query)\n\n\n  let dataToDisplay = data\n\n  if(query !== \"\"){\n    const q = query.toLowerCase()\n     dataToDisplay = data.filter((item)=>{\n      let fName = item.name.first.toLowerCase()\n      let lName = item.name.last.toLowerCase()\n      if(fName.includes(q) ||lName.includes(q) ){\n        return true\n      }else{\n        return false\n      }\n\n  \n    })\n\n  }\n\n\n  useEffect(()=>{\n    fetch('https://randomuser.me/api/?results=50')\n    .then(response => response.json())\n    .then(json => setData(json.results))\n  },[])\n  return (\n   \n    <div>\n\n      <header>\n      <h1 className=\"headerDiv\">Employee Directory</h1>\n      <h2 className=\"headerDiv\">Search by name</h2>\n      </header>\n\n\n    <div  className=\"input\" >\n      <input type='text' value={query} onChange={(e)=> setQuery(e.target.value)}/>\n      </div>\n\n\n\n    <div>\n    <Datatable data={dataToDisplay}/>\n    </div>\n\n    \n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}